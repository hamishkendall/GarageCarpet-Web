{"version":3,"sources":["components/navbar/NavBar.js","components/carousel/ProgressBar.js","components/carousel/Carousel.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","src","ProgressBar","completed","fillerStyles","height","width","backgroundColor","borderRadius","textAlign","transition","style","overflow","Carousel","images","require","useState","imgIndex","setImgIndex","imgSlide","setImgSlide","seconds","setSeconds","timePercent","setTimePercent","updateSlide","index","nextImage","length","prevIndex","useEffect","interval","setInterval","clearInterval","SwitchTransition","CSSTransition","timeout","classNames","imageUrl","alt","id","onClick","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2rBAYeA,MAVf,SAAgBC,GAGZ,OACI,qBAAKC,UAAU,SAAf,SACI,qBAAKC,IAAI,uC,uBCuBNC,MA3Bf,SAAsBH,GAEpB,IAAQI,EAAcJ,EAAdI,UASFC,EAAe,CACnBC,OAAQ,OACRC,MAAM,GAAD,OAAKH,EAAL,KACLI,gBAAiB,UACjBC,aAAc,UACdC,UAAW,QACXC,WAAY,mBAGd,OACE,qBAAKC,MAjBiB,CACtBN,OAAQ,OACRC,MAAO,OACPC,gBAAiB,UACjBK,SAAU,UAaV,SACE,qBAAKD,MAAOP,O,MC8DHS,MAlFf,WAEI,IAAMC,EAASC,EAAQ,IAIvB,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASF,EAAO,IAAhD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAYC,GACjBN,EAAYN,EAAOY,IAGvB,SAASC,IACFV,GAAYH,EAAOc,OAAS,GAC3BV,EAAY,GACZO,EAAY,KAGZP,GAAY,SAAAW,GAAS,OAAIA,EAAU,KACnCJ,EAAYR,EAAS,IAEzBK,EAAW,GACXE,EAAe,GAiCnB,OAjBAM,qBAAU,WACN,IAAMC,EAAWC,aAAY,WAC3BV,GAAW,SAACD,GAAD,OAAaA,EAAU,KAElCG,EAAgBH,EA3CA,EA2C2B,IAAO,IA3ClC,GA6CbA,GA7Ca,GA8CdM,MAGD,KAEH,OAAO,WACLM,cAAcF,MAEf,CAACV,EAASM,IAGX,sBAAK3B,UAAU,qBAAf,UACI,sBAAKA,UAAU,SAAf,UAAyBiB,EAAS,EAAlC,MAAwCH,EAAOc,UAE/C,sBAAK5B,UAAU,eAAf,UACI,cAACkC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAiCC,QAAS,IAAKC,WAAW,OAA1D,SACI,qBAAKrC,UAAU,QAAQC,IAAKkB,EAASmB,SAAUC,IAAI,MADnCpB,EAASqB,MAKjC,wBAAQxC,UAAU,OAAOyC,QAzCrC,WACoB,IAAbxB,GACCC,EAAYJ,EAAOc,OAAS,GAC5BH,EAAYX,EAAOc,OAAS,KAG5BV,GAAY,SAAAW,GAAS,OAAIA,EAAU,KACnCJ,EAAYR,EAAS,IAEzBK,EAAW,GACXE,EAAe,IA+BP,oBACA,wBAAQxB,UAAU,OAAOyC,QAASd,EAAlC,oBAEA,cAAC,EAAD,CAAaxB,UAAWoB,OAG5B,qBAAKvB,UAAU,OAAf,SAAuBmB,EAASuB,WC7D7BC,MAff,WACE,OACE,sBAAK3C,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,6CCDO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9243f9f8.chunk.js","sourcesContent":["import './NavBar.css';\r\n\r\nfunction NavBar(props) {\r\n\r\n\r\n    return (\r\n        <div className='NavBar'>\r\n            <img src=\"https://i.imgur.com/YryIGQy.png\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\n\r\nfunction ProgressBar (props) {\r\n\r\n  const { completed } = props;\r\n\r\n  const containerStyles = {\r\n    height: '10px',\r\n    width: '100%',\r\n    backgroundColor: \"#000000\",\r\n    overflow: 'hidden'\r\n  }\r\n\r\n  const fillerStyles = {\r\n    height: '100%',\r\n    width: `${completed}%`,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 'inherit',\r\n    textAlign: 'right',\r\n    transition: 'width 1s linear'\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyles}>\r\n      <div style={fillerStyles} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState, useEffect } from 'react';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport ProgressBar from './ProgressBar';\r\nimport './Carousel.css';\r\n\r\nfunction Carousel() {\r\n\r\n    const images = require('../../data/CarouselImages.json');\r\n    const imageShowTime = 7;\r\n\r\n\r\n    const [imgIndex, setImgIndex] = useState(0);\r\n    const [imgSlide, setImgSlide] = useState(images[0]);\r\n\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [timePercent, setTimePercent] = useState(0);\r\n\r\n    function updateSlide(index){\r\n        setImgSlide(images[index]);\r\n    }\r\n\r\n    function nextImage(){\r\n        if(imgIndex >= images.length - 1){\r\n            setImgIndex(0);\r\n            updateSlide(0);\r\n        }\r\n        else {\r\n            setImgIndex(prevIndex => prevIndex+1);\r\n            updateSlide(imgIndex+1);\r\n        }\r\n        setSeconds(0);\r\n        setTimePercent(0);\r\n    }\r\n\r\n    function previousImage(){\r\n        if(imgIndex === 0){\r\n            setImgIndex(images.length - 1);\r\n            updateSlide(images.length - 1);\r\n        }\r\n        else {\r\n            setImgIndex(prevIndex => prevIndex-1);\r\n            updateSlide(imgIndex-1);\r\n        }\r\n        setSeconds(0);\r\n        setTimePercent(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n          setSeconds((seconds) => seconds + 1);\r\n\r\n          setTimePercent((seconds / imageShowTime) * 100 + (100 / imageShowTime));\r\n\r\n          if(seconds >= imageShowTime){\r\n            nextImage();\r\n          }\r\n\r\n        }, 1000);\r\n    \r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [seconds, nextImage]);\r\n\r\n    return(\r\n        <div className='carousel-container'>\r\n            <div className=\"number\">{imgIndex+1} / {images.length}</div>\r\n\r\n            <div className=\"imgContainer\">\r\n                <SwitchTransition>\r\n                    <CSSTransition key={imgSlide.id} timeout={500} classNames=\"item\">\r\n                        <img className=\"image\" src={imgSlide.imageUrl} alt=\"\" />\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n\r\n                <button className=\"prev\" onClick={previousImage}>&#10094;</button>\r\n                <button className=\"next\" onClick={nextImage}>&#10095;</button>\r\n\r\n                <ProgressBar completed={timePercent} />\r\n            </div>\r\n\r\n            <div className=\"text\">{imgSlide.text}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Carousel;","import './App.css';\r\n\r\nimport NavBar from './components/navbar/NavBar';\r\nimport Carousel from './components/carousel/Carousel';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <NavBar />\r\n\r\n      <div className='Container'>\r\n        <Carousel />\r\n        <h1>test</h1>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}